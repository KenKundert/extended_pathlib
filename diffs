#!/usr/bin/env python3
# Compare local files to those in a remote directory

"""Diffs

Show differences between these local files and their clones.

Usage: diffs [options]

Options:
    -d, --diff    show differences rather than bringing up editor
    -r, --reset   reset difference files
    -c, --create  create any missing difference files
    -u, --update  update difference files
    -l, --list    list differences
"""

# Imports {{{1
from __future__ import division, print_function
import sys
from textwrap import dedent
from scripts import (
    exists, fopen, head, join, missing, mkdir, rm, touch,
    Run, Sh, script_prefs, ScriptError
)
from difflib import ndiff
from inform import Color
from vdiff import Vdiff
from docopt import docopt
from clones import clones
try:
    from clones import root
except ImportError:
    root = '.'

# Globals {{{1
missingColor = Color('magenta')
unexpectedDiffColor = Color('red')
expectedDiffColor = Color('green')
noDiffColor = Color('green')
arguments = docopt(__doc__)
script_prefs.set('exit_upon_error', False)

# Compare the files {{{1
for clone in clones:
    pathToLclRoot = root
    pathToRmtRoot = clone['path']
    for fileinfo in clone['files']:
        lclName = fileinfo['lclpath']
        pathToLcl = join(pathToLclRoot, lclName)
        rmtName = join(fileinfo.get('rmtpath', lclName))
        pathToRmt = join(pathToLclRoot, pathToRmtRoot, rmtName)
        isBinary = fileinfo.get('is_binary', False)
        pathToDelta = join('Diffs', clone['name'], rmtName)

        try:
            if arguments['--create']:
                if isBinary:
                    continue
                touch(pathToDelta)
            elif arguments['--reset']:
                if isBinary:
                    continue
                rm(pathToDelta)
                touch(pathToDelta)
            elif arguments['--update']:
                if isBinary:
                    continue
                if missing(pathToRmt):
                    print(missingColor('%s: missing.' % pathToRmt))
                    continue
                mkdir(head(pathToDelta))
                Sh(['diff', pathToLcl, pathToRmt, '>', pathToDelta], modes='W1')
            elif missing(pathToRmt):
                print(missingColor('%s: missing' % pathToRmt))
                continue
            elif isBinary:
                if Run(['cmp', '-s', pathToLcl, pathToRmt], modes='W1'):
                    print(unexpectedDiffColor(
                        '%s and %s differ.' % (pathToLcl, pathToRmt)
                    ))
            else:
                if exists(pathToDelta):
                    with fopen(pathToDelta) as f:
                        expected = f.read()
                else:
                    expected = ''

                diff = Run(['diff', pathToLcl, pathToRmt], modes='WO1')
                if diff.stdout != expected:
                    if diff.status:
                        print(unexpectedDiffColor(
                            '%s and %s contain unexpected differences.' % (
                                pathToLcl, pathToRmt
                            )
                        ))
                    else:
                        print(unexpectedDiffColor(
                            '%s and %s are unexpectedly the same.' % (pathToLcl, pathToRmt)
                        ))
                    if not arguments['--list']:
                        if arguments['--diff']:
                            print(''.join(ndiff(
                                diff.stdout.splitlines(1), expected.splitlines(1)
                            )))
                        else:
                            print(diff.stdout)
                            vdiff = Vdiff(pathToLcl, pathToRmt)
                            try:
                                vdiff.edit()
                            except KeyboardInterrupt:
                                vdiff.cleanup()
                                sys.exit('killed by user')
                else:
                    if diff.status:
                        print(expectedDiffColor(
                            '%s and %s contain expected differences.' % (
                                pathToLcl, pathToRmt
                            )
                        ))
                    else:
                        print(noDiffColor(
                            '%s and %s are the same.' % (pathToLcl, pathToRmt)
                        ))
        except ScriptError as err:
            print(str(err))
